{"ID":"20250925192758-8t9f9mo","Spec":"1","Type":"NodeDocument","Properties":{"id":"20250925192758-8t9f9mo","title":"所有权与借用","type":"doc","updated":"20250926180456"},"Children":[{"ID":"20250925192835-ecdq0t3","Type":"NodeParagraph","Properties":{"id":"20250925192835-ecdq0t3","updated":"20250925192837"},"Children":[{"Type":"NodeText","Data":"所有权"}]},{"ID":"20250925192830-5yji5uq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250925192830-5yji5uq","updated":"20250925192840"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"1. Rust 中每一个值都被一个变量所拥有，该变量被称为值的所有者\n2. 一个值同时只能被一个变量所拥有，或者说一个值只能拥有一个所有者\n3. 当所有者（变量）离开作用域范围时，这个值将被丢弃(drop)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250925192843-yt1psa9","Type":"NodeParagraph","Properties":{"id":"20250925192843-yt1psa9","updated":"20250926091342"},"Children":[{"Type":"NodeText","Data":"作用域：和其他语言差不多"}]},{"ID":"20250926095705-pn7ncjf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250926095705-pn7ncjf","updated":"20250926155042"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"let s1 = String::from(\"hello\"); //复杂类型\nlet s2 = s1;   \ns2发生了移动赋值，s1失效。发生了所有权转移\nlet s1 = String::from(\"hello\");\nlet s2 = s1.clone();\n发生了克隆，s1不会失效\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250926134023-fkgcean","Type":"NodeParagraph","Properties":{"id":"20250926134023-fkgcean","updated":"20250926155948"},"Children":[{"Type":"NodeText","Data":"Rust 有一个叫做 Copy 的特征：在栈中存储的类型，有 Copy 特征，一个旧的变量在被赋值给其他变量后仍然可用"}]},{"ID":"20250926155949-8o1xfq7","Type":"NodeParagraph","Properties":{"id":"20250926155949-8o1xfq7","updated":"20250926165318"},"Children":[{"Type":"NodeText","Data":"使用借用来解决"}]},{"ID":"20250926165845-vmp9tsx","Type":"NodeParagraph","Properties":{"id":"20250926165845-vmp9tsx","updated":"20250926165848"},"Children":[{"Type":"NodeText","Data":"借用："}]},{"ID":"20250926165848-qldzgll","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250926165848-qldzgll","updated":"20250926172027"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n    let x = 5;\n    let y = \u0026x;  //借用类型\n\n    assert_eq!(5, x);\n    assert_eq!(5, *y); //需要解引用\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250926172022-2e03rcj","Type":"NodeParagraph","Properties":{"id":"20250926172022-2e03rcj","updated":"20250926173923"},"Children":[{"Type":"NodeText","Data":"多引用问题："}]},{"ID":"20250926173923-5wgmgov","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250926173923-5wgmgov","updated":"20250926174043"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"let mut s = String::from(\"hello\");\n\nlet r1 = \u0026mut s;\n//let r2 = \u0026mut s; //这是错误的 ， 同一作用域只能存在一个可变引用\nprintln!(\"{}, {}\", r1, r2);\n|\n|\nv\nlet mut s = String::from(\"hello\");\n{\n\tlet r1 = \u0026mut s;\n}\nlet r2 = \u0026mut s; //用大括号限制作用域\nprintln!(\"{}, {}\", r1, r2);\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250926174044-xnv3v2p","Type":"NodeParagraph","Properties":{"id":"20250926174044-xnv3v2p","updated":"20250926174302"},"Children":[{"Type":"NodeText","Data":"可变引用与不可变引用不可以同时存在：对于rust 1.31后作了修改"}]},{"ID":"20250926180443-3wq3wyp","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250926180443-3wq3wyp","updated":"20250926180456"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/basic/ownership/borrowing.html#nll","TextMarkTextContent":"NLL"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"Non-Lexical Lifetimes非词法寿命期"}]},{"ID":"20250926174222-a0nobwb","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250926174222-a0nobwb","updated":"20250926174352"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n   let mut s = String::from(\"hello\");\n\n    let r1 = \u0026s;\n    let r2 = \u0026s;\n    println!(\"{} and {}\", r1, r2);\n    // 新编译器中，r1,r2作用域在这里结束\n\n    let r3 = \u0026mut s;\n    println!(\"{}\", r3);\n} // 老编译器中，r1、r2、r3作用域在这里结束\n  // 新编译器中，r3作用域在这里结束，会判断最后一次引用的位置\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250926180456-hss33v6","Type":"NodeParagraph","Properties":{"id":"20250926180456-hss33v6","updated":"20250926180456"}}]}