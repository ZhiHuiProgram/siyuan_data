{"ID":"20251002004831-7sisucd","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251002004831-7sisucd","title":"模式适用场景","type":"doc","updated":"20251002005755"},"Children":[{"ID":"20251002004831-656cw8c","Type":"NodeParagraph","Properties":{"id":"20251002004831-656cw8c","updated":"20251002005200"},"Children":[{"Type":"NodeText","Data":"匹配"}]},{"ID":"20251002005201-ra6pc5d","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251002005201-ra6pc5d","updated":"20251002005755"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"匹配：match VALUE {\n\t    PATTERN =\u003e EXPRESSION,\n    \tPATTERN =\u003e EXPRESSION,\n    \t_ =\u003e EXPRESSION,\n\t}\n单例匹配：\n\tif let PATTERN = SOME_VALUE {  }else { } 可以有返回值\n循环判断：\n\twhile let Some(top) = stack.pop() {\n    \tprintln!(\"{}\", top);\n\t}\n循环取值：\n\tfor (index, value) in v.iter().enumerate() {   迭代器的enuerate会返回一个索引和值的元组\n    \tprintln!(\"{} is at index {}\", value, index);\n\t}\n绑定：\n\tlet x = 5;  这也是一种模式\n函参：\n\tfn foo(x: i32) {  x会匹配i32\n    \t// 代码\n\t}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251002005419-y5piv50","Type":"NodeParagraph","Properties":{"id":"20251002005419-y5piv50","updated":"20251002005419"}}]}