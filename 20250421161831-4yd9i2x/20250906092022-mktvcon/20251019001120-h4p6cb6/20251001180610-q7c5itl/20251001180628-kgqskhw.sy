{"ID":"20251001180628-kgqskhw","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251001180628-kgqskhw","title":"match 和 if let","type":"doc","updated":"20251002011604"},"Children":[{"ID":"20251001180628-wmzgkrj","Type":"NodeParagraph","Properties":{"id":"20251001180628-wmzgkrj","updated":"20251001181548"},"Children":[{"Type":"NodeText","Data":"match：所有分支都要是表达式，且返回类型一样"}]},{"ID":"20251001180646-omgr4qh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251001180646-omgr4qh","updated":"20251001182624"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"enum Direction {\n    East,\n    West,\n    North,\n    South,\n}\n\nfn main() {\n    let dire = Direction::South;\n    match dire {\n        Direction::East =\u003e {\n\t\t\t\tprintln!(\"East\")；\n\t\t\t\t3\n\t\t},\n        Direction::North | Direction::South =\u003e {   // | 或运算符\n            println!(\"South or North\");\n        },\n        _ =\u003e println!(\"West\"),  // _ 代表所有剩未列出属性\n    };\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251001185132-0rs31v7","Type":"NodeParagraph","Properties":{"id":"20251001185132-0rs31v7","updated":"20251001185157"},"Children":[{"Type":"NodeText","Data":"在只需要处理一个模式的时候，match就会啰嗦"}]},{"ID":"20251001185158-z80hr2t","Type":"NodeParagraph","Properties":{"id":"20251001185158-z80hr2t","updated":"20251001185558"},"Children":[{"Type":"NodeText","Data":"if let:  有点像if语句，造值然后对比"}]},{"ID":"20251001185244-b9sb6z4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251001185244-b9sb6z4","updated":"20251001185300"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"    let v = Some(3u8);\n    match v {\n        Some(3) =\u003e println!(\"three\"),\n        _ =\u003e (),\n    }  //强制写 _\n\nif let Some(3) = v {\n    println!(\"three\");\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251001191414-faj0sht","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251001191414-faj0sht","updated":"20251002011604"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/basic/match-pattern/match-if-let.html#matches%E5%AE%8F","TextMarkTextContent":"matches!宏"},{"Type":"NodeText","Data":"：可以将表达式与模式匹配，然后返回结果"}]},{"ID":"20251001191415-lz5j6fh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251001191415-lz5j6fh","updated":"20251001192752"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"enum MyEnum {\n    Foo,\n    Bar\n}\n\nfn main() {\n    let v = vec![MyEnum::Foo,MyEnum::Bar,MyEnum::Foo];\n\tlet t = v.iter().filter(|x| matches!(x, MyEnum::Foo)).collect();\n}\n\nlet bar = Some(4);\nassert!(matches!(bar, Some(x) if x \u003e 2)); //if x \u003e 2这是一个条件判断，x的只是不是大于2\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251002010309-cce00hh","Type":"NodeParagraph","Properties":{"id":"20251002010309-cce00hh","updated":"20251002010321"},"Children":[{"Type":"NodeText","Data":"rust 1.65新增了一个语法："}]},{"ID":"20251002010321-3frnhua","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251002010321-3frnhua","updated":"20251002010802"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"let (Some(count_str), Some(item)) = (it.next(), it.next()) else {\n    panic!(\"Can't segment count item pair: '{s}'\");\n};\n这里匹配it.next() 是不是Some，匹配不上就是panic\n这里count_str item既声明了，又取到it.next()里面的值了\n    let (Some(x), Some(y)) = (Some(1), Some(2)) else {\n        panic!(\"other\");\n    };\n\tx = 1 , y = 2;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251002011604-lk6mkwm","Type":"NodeParagraph","Properties":{"id":"20251002011604-lk6mkwm","updated":"20251002011604"}}]}