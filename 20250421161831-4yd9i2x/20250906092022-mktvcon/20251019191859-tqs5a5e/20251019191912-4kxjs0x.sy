{"ID":"20251019191912-4kxjs0x","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251019191912-4kxjs0x","title":"生命周期","type":"doc","updated":"20251021182530"},"Children":[{"ID":"20251020222903-qhd3x11","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251020222903-qhd3x11","updated":"20251020223744"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#%E4%B8%8D%E5%A4%AA%E8%81%AA%E6%98%8E%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%A3%80%E6%9F%A5","TextMarkTextContent":"不太聪明的生命周期检查"}]},{"ID":"20251020222903-p94cyie","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251020222903-p94cyie","updated":"20251020222932"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"#![allow(unused)]\nfn main() {\n    use std::collections::HashMap;\n    use std::hash::Hash;\n    fn get_default\u003c'm, K, V\u003e(map: \u0026'm mut HashMap\u003cK, V\u003e, key: K) -\u003e \u0026'm mut V\n    where\n        K: Clone + Eq + Hash,\n        V: Default,\n    {\n        match map.get_mut(\u0026key) {   //引用一次\n            Some(value) =\u003e value,\n            None =\u003e {\n                map.insert(key.clone(), V::default());\n                map.get_mut(\u0026key).unwrap()  //引用第二次\n            }\n        }\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251020223748-seibm3r","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251020223748-seibm3r","updated":"20251020225100"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#%E6%97%A0%E7%95%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F","TextMarkTextContent":"无界生命周期"},{"Type":"NodeText","Data":"：UNSAFE"}]},{"ID":"20251020223749-lyjkdac","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251020223749-lyjkdac","updated":"20251020225057"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn f\u003c'a, T\u003e(x: *const T) -\u003e \u0026'a T {\n    unsafe {\n        \u0026*x  //输入并没有生命周期，但是解引用指针，再转换引用，就变成了 \u0026T， 这里T有生命周期，所以是\u0026'a T\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251020225129-5mpvchr","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251020225129-5mpvchr","updated":"20251020230922"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%BA%A6%E6%9D%9F-hrtb","TextMarkTextContent":"生命周期约束 HRTB"}]},{"ID":"20251020225133-wjirsjv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251020225133-wjirsjv","updated":"20251020230922"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"'a: 'b \t表示 'a 至少要活得跟 'b 一样久。\n\tstruct DoubleRef\u003c'a,'b:'a, T\u003e {\n\t    r: \u0026'a T,\n\t    s: \u0026'b T\n\t}\nT: 'a  表示类型 T 必须比 'a 活得要久\n\tstruct Ref\u003c'a, T: 'a\u003e {\n\t    r: \u0026'a T\n\t}\n\t但是1.3.1编译器会推导\n\tstruct Ref\u003c'a, T\u003e {\n\t    r: \u0026'a T\n\t}\n例子：\nstruct ImportantExcerpt\u003c'a\u003e {\n    part: \u0026'a str,\n}\n\nimpl\u003c'a: 'b, 'b\u003e ImportantExcerpt\u003c'a\u003e { \n    fn announce_and_return_part(\u0026'a self, announcement: \u0026'b str) -\u003e \u0026'b str {   //'b作为结构体的引用，机构体的内引用生命周期又是'a，约束'b不能大于'a\n        println!(\"Attention please: {}\", announcement);\n        self.part\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021164130-mngb3y1","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251021164130-mngb3y1","updated":"20251021174754"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#%E9%97%AD%E5%8C%85%E5%87%BD%E6%95%B0%E7%9A%84%E6%B6%88%E9%99%A4%E8%A7%84%E5%88%99","TextMarkTextContent":"闭包函数的消除规则"},{"Type":"NodeText","Data":"：闭包不支持生命周期省略，比支持显示生命周期标注，就不要返回引用了"}]},{"ID":"20251021164131-879fnrt","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021164131-879fnrt","updated":"20251021174638"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn fn_elision(x: \u0026i32) -\u003e \u0026i32 { x }\nlet closure_slision = |x: \u0026i32| -\u003e \u0026i32 { x };  //此行有bug\n//方法1\nlet closure_a: for\u003c'a\u003e fn(\u0026'a i32) -\u003e \u0026'a i32 = |x| x; //转换后，闭包变成了函数指针\n//方法2\nlet closure_slision = fun(|x: \u0026i32| -\u003e \u0026i32 { x });\nassert_eq!(*closure_slision(\u002645), 45);\nfn fun\u003cT, F: Fn(\u0026T) -\u003e \u0026T\u003e(f: F) -\u003e F {\n    f\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021174755-xlfzwr4","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251021174755-xlfzwr4","updated":"20251021175230"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#nll-non-lexical-lifetime","TextMarkTextContent":"NLL (Non-Lexical Lifetime)"},{"Type":"NodeText","Data":"：非词汇期寿命：引用与借用前面有说过"}]},{"ID":"20251021174853-2o7ac8v","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021174853-2o7ac8v","updated":"20251021175230"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"//再说一次：从 1.31 版本引入 NLL 后引用的生命周期从借用处开始，一直持续到最后一次使用的地方。原本是持续到函数作用域结束\n//当一个生命周期内只能有一个可变借用，可变借用和不可变借用不可以同时存在，不可变借用可以同时存在\nlet mut u = 0i32;\nlet mut v = 1i32;\nlet mut w = 2i32;\n\n// lifetime of `a` = α ∪ β ∪ γ\nlet mut a = \u0026mut u;     // --+ α. lifetime of `\u0026mut u`  --+ lexical \"lifetime\" of `\u0026mut u`,`\u0026mut u`, `\u0026mut w` and `a`\nuse(a);                 //   |                            |\n*a = 3; // \u003c-----------------+                            |\n...                     //                                |\na = \u0026mut v;             // --+ β. lifetime of `\u0026mut v`    |\nuse(a);                 //   |                            |\n*a = 4; // \u003c-----------------+                            |\n...                     //                                |\na = \u0026mut w;             // --+ γ. lifetime of `\u0026mut w`    |\nuse(a);                 //   |                            |\n*a = 5; // \u003c-----------------+ \u003c--------------------------+\n\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021175347-v3xrig1","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20251021175347-v3xrig1","updated":"20251021182508"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#reborrow-%E5%86%8D%E5%80%9F%E7%94%A8","TextMarkTextContent":"Reborrow 再借用"},{"Type":"NodeText","Data":"："}]},{"ID":"20251021175348-eqe85zo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021175348-eqe85zo","updated":"20251021180421"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"//前提，可变借用：再借用期间，不可以对可变借用发起访问\n//不可变借用的再借用没有限制\nfn main() {\n    let mut p = Point { x: 0, y: 0 };\n    let r = \u0026mut p;\n    let rr: \u0026Point = \u0026*r;\n\n    println!(\"{:?}\", rr);\n    r.move_to(10, 10);\n    println!(\"{:?}\", r);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021180648-x4dpnlp","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251021180648-x4dpnlp","updated":"20251021182508"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%B6%88%E9%99%A4%E8%A7%84%E5%88%99%E8%A1%A5%E5%85%85","TextMarkTextContent":"生命周期消除规则补充"}]},{"ID":"20251021180649-wuq7tbf","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021180649-wuq7tbf","updated":"20251021180836"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"//impl 块消除    //没用到可以匿名\nimpl\u003c'a\u003e Reader for BufReader\u003c'a\u003e {   --\u003e  impl\u003c'a, 'b\u003e Reader for BufReader\u003c'a, 'b\u003e\n    // methods go here\n    // impl内部实际上没有用到'a\n}\nimpl Reader for BufReader\u003c'_\u003e {   --》   impl Reader for BufReader\u003c'_, '_\u003e  --\u003e  impl Reader for BufReader\u003c'b, '_\u003e\n    // methods go here\n}\n\n//生命周期约束消除\n// Rust 2015\nstruct Ref\u003c'a, T: 'a\u003e {\n    field: \u0026'a T\n}\n\n// Rust 2018\nstruct Ref\u003c'a, T\u003e {\n    field: \u0026'a T\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021182506-ou9ps10","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251021182506-ou9ps10","updated":"20251021182530"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/lifetime/advance.html#%E4%B8%80%E4%B8%AA%E5%A4%8D%E6%9D%82%E7%9A%84%E4%BE%8B%E5%AD%90","TextMarkTextContent":"例子"}]},{"ID":"20251021182515-dzg44w8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021182515-dzg44w8","updated":"20251021182522"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"struct Interface\u003c'a\u003e {\n    manager: \u0026'a mut Manager\u003c'a\u003e\n}\n\nimpl\u003c'a\u003e Interface\u003c'a\u003e {\n    pub fn noop(self) {\n        println!(\"interface consumed\");\n    }\n}\n\nstruct Manager\u003c'a\u003e {\n    text: \u0026'a str\n}\n\nstruct List\u003c'a\u003e {\n    manager: Manager\u003c'a\u003e,\n}\n\nimpl\u003c'a\u003e List\u003c'a\u003e {\n    pub fn get_interface(\u0026'a mut self) -\u003e Interface {\n        Interface {\n            manager: \u0026mut self.manager\n        }\n    }\n}\n\nfn main() {\n    let mut list = List {\n        manager: Manager {\n            text: \"hello\"\n        }\n    };\n\n    list.get_interface().noop();\n\n    println!(\"Interface should be dropped here and the borrow released\");\n\n    // 下面的调用会失败，因为同时有不可变/可变借用\n    // 但是Interface在之前调用完成后就应该被释放了\n    use_list(\u0026list);\n}\n\nfn use_list(list: \u0026List) {\n    println!(\"{}\", list.manager.text);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021182524-uz5hqet","Type":"NodeParagraph","Properties":{"id":"20251021182524-uz5hqet","updated":"20251021182526"},"Children":[{"Type":"NodeText","Data":"答案："}]},{"ID":"20251021182527-fay3e78","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021182527-fay3e78","updated":"20251021182530"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"struct Interface\u003c'b, 'a: 'b\u003e {\n    manager: \u0026'b mut Manager\u003c'a\u003e\n}\n\nimpl\u003c'b, 'a: 'b\u003e Interface\u003c'b, 'a\u003e {\n    pub fn noop(self) {\n        println!(\"interface consumed\");\n    }\n}\n\nstruct Manager\u003c'a\u003e {\n    text: \u0026'a str\n}\n\nstruct List\u003c'a\u003e {\n    manager: Manager\u003c'a\u003e,\n}\n\nimpl\u003c'a\u003e List\u003c'a\u003e {\n    pub fn get_interface\u003c'b\u003e(\u0026'b mut self) -\u003e Interface\u003c'b, 'a\u003e\n    where 'a: 'b {\n        Interface {\n            manager: \u0026mut self.manager\n        }\n    }\n}\n\nfn main() {\n\n    let mut list = List {\n        manager: Manager {\n            text: \"hello\"\n        }\n    };\n\n    list.get_interface().noop();\n\n    println!(\"Interface should be dropped here and the borrow released\");\n\n    // 下面的调用可以通过，因为Interface的生命周期不需要跟list一样长\n    use_list(\u0026list);\n}\n\nfn use_list(list: \u0026List) {\n    println!(\"{}\", list.manager.text);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}