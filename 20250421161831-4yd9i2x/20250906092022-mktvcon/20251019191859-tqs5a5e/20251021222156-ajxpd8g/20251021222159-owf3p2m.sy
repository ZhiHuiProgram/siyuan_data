{"ID":"20251021222159-owf3p2m","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251021222159-owf3p2m","title":"\u0026amp;'static 和 T: 'static","type":"doc","updated":"20251021231506"},"Children":[{"ID":"20251021222159-9pz1o1j","Type":"NodeParagraph","Properties":{"id":"20251021222159-9pz1o1j","updated":"20251021223818"},"Children":[{"Type":"NodeText","Data":"特征对象的生命周期也是 'static"}]},{"ID":"20251021223815-c68sj0w","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021223815-c68sj0w","updated":"20251021223831"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"//但是\ntrait Display {\n    fn display(\u0026self) -\u003e \u0026str;\n}\nstruct Message\u003c'a\u003e {\n    text: \u0026'a str,\n}\nimpl\u003c'a\u003e Display for Message\u003c'a\u003e {\n    fn display(\u0026self) -\u003e \u0026str {\n        self.text\n    }\n}\n\n// ❌ 编译错误！Message\u003c'a\u003e 不是 'static\nfn create_display(msg: Message) -\u003e Box\u003cdyn Display\u003e {\n    Box::new(msg)\n}\n// 错误：`msg` 包含非 'static 引用\n\n// ✓ 正确：显式指定生命周期\nfn create_display\u003c'a\u003e(msg: Message\u003c'a\u003e) -\u003e Box\u003cdyn Display + 'a\u003e {\n    //                                                        ^^\n    Box::new(msg)\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021223834-3wum2y1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021223834-3wum2y1","updated":"20251021223854"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"use std::fmt::Display;\nfn main() {\n    let mark_twain = \"Samuel Clemens\";\n    print(\u0026mark_twain);\n}\n\nfn print\u003cT: Display + 'static\u003e(message: \u0026T) {\n    println!(\"{}\", message);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021224204-bhca7ng","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251021224204-bhca7ng","updated":"20251021225846"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a code","TextMarkAHref":"https://course.rs/advance/lifetime/static.html#static","TextMarkTextContent":"\u0026amp;'static"},{"Type":"NodeText","Data":"​"}]},{"ID":"20251021224205-9plb74f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021224205-9plb74f","updated":"20251021225843"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"\u0026'static 生命周期针对的仅仅是引用，而不是持有该引用的变量，对于变量来说，还是要遵循相应的作用域规则 :\n\tuse std::{slice::from_raw_parts, str::from_utf8_unchecked};\n\t\n\tfn get_memory_location() -\u003e (usize, usize) {\n\t  // “Hello World” 是字符串字面量，因此它的生命周期是 `'static`.\n\t  // 但持有它的变量 `string` 的生命周期就不一样了，它完全取决于变量作用域，对于该例子来说，也就是当前的函数范围\n\t  let string = \"Hello World!\";\n\t  let pointer = string.as_ptr() as usize;\n\t  let length = string.len();\n\t  (pointer, length)\n\t  // `string` 在这里被 drop 释放\n\t  // 虽然变量被释放，无法再被访问，但是数据依然还会继续存活\n\t}\n\t\n\tfn get_str_at_location(pointer: usize, length: usize) -\u003e \u0026'static str {\n\t  // 使用裸指针需要 `unsafe{}` 语句块\n\t  unsafe { from_utf8_unchecked(from_raw_parts(pointer as *const u8, length)) }\n\t}\n\t\n\tfn main() {\n\t  let (pointer, length) = get_memory_location();\n\t  let message = get_str_at_location(pointer, length);\n\t  println!(\n\t    \"The {} bytes at 0x{:X} stored: {}\",\n\t    length, pointer, message\n\t  );\n\t  // 如果大家想知道为何处理裸指针需要 `unsafe`，可以试着反注释以下代码\n\t  // let message = get_str_at_location(1000, 10);\n\t}\n\u0026'static 的引用确实可以和程序活得一样久，因为我们通过 get_str_at_location 函数直接取到了对应的字符串\n持有 \u0026'static 引用的变量，它的生命周期受到作用域的限制，大家务必不要搞混了\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251021230027-h29j6xl","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251021230027-h29j6xl","updated":"20251021231506"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a code","TextMarkAHref":"https://course.rs/advance/lifetime/static.html#t-static","TextMarkTextContent":"T: 'static"},{"Type":"NodeText","Data":"​"}]},{"ID":"20251021230027-dhmfeox","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251021230027-dhmfeox","updated":"20251021231506"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn print_it\u003cT: Debug + 'static\u003e( input: T)   //这里要求传入的数据的 static的\nfn print_it\u003cT: Debug + 'static\u003e( input: \u0026T)  //这里只是对T的引用，要求T是static，但是\u0026T并没有约束\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}