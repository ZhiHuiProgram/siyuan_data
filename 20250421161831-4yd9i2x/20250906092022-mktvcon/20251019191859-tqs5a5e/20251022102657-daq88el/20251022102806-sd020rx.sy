{"ID":"20251022102806-sd020rx","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251022102806-sd020rx","title":"闭包 Closure","type":"doc","updated":"20251022181432"},"Children":[{"ID":"20251022180105-lx7zvi1","Type":"NodeParagraph","Properties":{"id":"20251022180105-lx7zvi1","updated":"20251022180105"}},{"ID":"20251022102806-ng5b4go","Type":"NodeParagraph","Properties":{"id":"20251022102806-ng5b4go","updated":"20251022103038"},"Children":[{"Type":"NodeText","Data":"闭包是"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"一种匿名函数，它可以赋值给变量也可以作为参数传递给其它函数，不同于函数的是，它允许捕获调用者作用域中的值"}]},{"ID":"20251022103038-nlbi0xj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251022103038-nlbi0xj","updated":"20251022103321"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn main() {\n   let x = 1;\n   let sum = |y| x + y;  //可以赋值给变量，允许捕获调用者作用域中的值\n\n    assert_eq!(3, sum(2));  //sum 被赋值为了函数\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251022103042-wxi0f3k","Type":"NodeParagraph","Properties":{"id":"20251022103042-wxi0f3k","updated":"20251022172926"},"Children":[{"Type":"NodeText","Data":"类似函数指针"}]},{"ID":"20251022172927-wgja3n1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251022172927-wgja3n1","updated":"20251022172957"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn muuuuu(intensity: u32) -\u003e u32 {\n    println!(\"muuuu.....\");\n    thread::sleep(Duration::from_secs(2));\n    intensity\n}\nlet action = muuuuu;\naction(intensity)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251022172958-3wvsv5c","Type":"NodeParagraph","Properties":{"id":"20251022172958-3wvsv5c","updated":"20251022173006"},"Children":[{"Type":"NodeText","Data":"上面的那个进行闭包替换"}]},{"ID":"20251022173007-v94wu2n","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251022173007-v94wu2n","updated":"20251022173731"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"\tlet action = || {\n        println!(\"muuuu.....\");\n        thread::sleep(Duration::from_secs(2));\n        intensity\n    };\n\taction();\n方法：\n\tlet mut x = 1;\n    let closure = |x: \u0026mut i32| {*x= *x + 1; *x};\n    println!(\"{}\", closure(\u0026mut x));\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251022180056-skz6xco","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251022180056-skz6xco","updated":"20251022181432"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/functional-programing/closure.html#%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85","TextMarkTextContent":"结构体中的闭包"}]},{"ID":"20251022180057-m2q7e8o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251022180057-m2q7e8o","updated":"20251022181432"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"struct Cacher\u003cT\u003e\nwhere\n    T: Fn(u32) -\u003e u32,\n{\n    query: T,\n    value: Option\u003cu32\u003e,\n}\nFn(u32) -\u003e u32 是一个特征，用来表示 T 是一个闭包类型，同样适用于函数\n\n调用的时候： (test.query)(x:i32)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}