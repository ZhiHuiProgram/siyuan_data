{"ID":"20251028210415-5fuzxb1","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251028210415-5fuzxb1","title":"智能指针","type":"doc","updated":"20251028211327"},"Children":[{"ID":"20251028210415-zblcn6w","Type":"NodeParagraph","Properties":{"id":"20251028210415-zblcn6w","updated":"20251028210743"},"Children":[{"Type":"NodeText","Data":"在 Rust 中，最常见的指针类型是引用，引用通过 \u0026 符号表示。"}]},{"ID":"20251028211300-wa9qm6g","Type":"NodeParagraph","Properties":{"id":"20251028211300-wa9qm6g","updated":"20251028211300"},"Children":[{"Type":"NodeText","Data":"借用其它变量的值。引用本身很简单，除了指向某个值外并没有其它的功能，也不会造成性能上的额外损耗，因此是 Rust 中使用最多的指针类型"}]},{"ID":"20251028211300-jh3zlj9","Type":"NodeParagraph","Properties":{"id":"20251028211300-jh3zlj9","updated":"20251028211326"},"Children":[{"Type":"NodeText","Data":"而智能指针则不然，它虽然也号称指针，但是它是一个复杂的家伙：通过比引用更复杂的数据结构，包含比引用更多的信息，例如元数据，当前长度，最大可用长度等。总之，Rust 的智能指针并不是独创，在 C++ 或者其他语言中也存在相似的概念。 //C++这里没怎么学"}]},{"ID":"20251028211327-4c47pn9","Type":"NodeParagraph","Properties":{"id":"20251028211327-4c47pn9","updated":"20251028211327"}}]}