{"ID":"20251030210439-z7dwpso","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251030210439-z7dwpso","title":"Drop 释放资源","type":"doc","updated":"20251030213757"},"Children":[{"ID":"20251030210439-1nh3qet","Type":"NodeParagraph","Properties":{"id":"20251030210439-1nh3qet","updated":"20251030212337"},"Children":[{"Type":"NodeText","Data":"Drop特征释放"}]},{"ID":"20251030212337-dkibewd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251030212337-dkibewd","updated":"20251030212405"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"struct HasDrop1;\nstruct HasDrop2;\nimpl Drop for HasDrop1 {\n    fn drop(\u0026mut self) {\n        println!(\"Dropping HasDrop1!\");\n    }\n}\nimpl Drop for HasDrop2 {\n    fn drop(\u0026mut self) {\n        println!(\"Dropping HasDrop2!\");\n    }\n}\nstruct HasTwoDrops {\n    one: HasDrop1,\n    two: HasDrop2,\n}\nimpl Drop for HasTwoDrops {\n    fn drop(\u0026mut self) {\n        println!(\"Dropping HasTwoDrops!\");\n    }\n}\n\nstruct Foo;\n\nimpl Drop for Foo {\n    fn drop(\u0026mut self) {\n        println!(\"Dropping Foo!\")\n    }\n}\n\nfn main() {\n    let _x = HasTwoDrops {\n        two: HasDrop2,\n        one: HasDrop1,\n    };\n    let _foo = Foo;\n    println!(\"Running!\");\n}\n\n输出：\n\tRunning!\n\tDropping Foo!\n\tDropping HasTwoDrops!\n\tDropping HasDrop1!\n\tDropping HasDrop2!\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251030212415-qu882sj","Type":"NodeList","ListData":{},"Properties":{"id":"20251030212415-qu882sj","updated":"20251030212415"},"Children":[{"ID":"20251030212415-qtbks8h","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20251030212415-qtbks8h","updated":"20251030212415"},"Children":[{"ID":"20251030212415-bp6o1nz","Type":"NodeParagraph","Properties":{"id":"20251030212415-bp6o1nz","updated":"20251030212415"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"变量级别，按照逆序的方式"},{"Type":"NodeText","Data":"​，"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_x"},{"Type":"NodeText","Data":"​ 在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_foo"},{"Type":"NodeText","Data":"​ 之前创建，因此 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_x"},{"Type":"NodeText","Data":"​ 在 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_foo"},{"Type":"NodeText","Data":"​ 之后被 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"drop"},{"Type":"NodeText","Data":"​"}]}]},{"ID":"20251030212415-y233xvp","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20251030212415-y233xvp","updated":"20251030212415"},"Children":[{"ID":"20251030212415-hfq84gz","Type":"NodeParagraph","Properties":{"id":"20251030212415-hfq84gz","updated":"20251030212415"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"结构体内部，按照顺序的方式"},{"Type":"NodeText","Data":"​，结构体 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"_x"},{"Type":"NodeText","Data":"​ 中的字段按照定义中的顺序依次 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"drop"},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20251030212714-q52s0he","Type":"NodeParagraph","Properties":{"id":"20251030212714-q52s0he","updated":"20251030212714"},"Children":[{"Type":"NodeText","Data":"原因在于，Rust 自动为几乎所有类型都实现了 Drop 特征，因此就算你不手动为结构体实现 Drop，它依然会调用默认实现的 drop 函数，同时再调用每个字段的 drop 方法，最终打印出："}]},{"ID":"20251030212717-9m2eaex","Type":"NodeParagraph","Properties":{"id":"20251030212717-9m2eaex","updated":"20251030212718"},"Children":[{"Type":"NodeText","Data":"Dropping HasDrop1!\nDropping HasDrop2!"}]},{"ID":"20251030212910-xphlsfw","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251030212910-xphlsfw","updated":"20251030213121"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/smart-pointer/drop.html#%E6%89%8B%E5%8A%A8%E5%9B%9E%E6%94%B6","TextMarkTextContent":"手动回收"}]},{"ID":"20251030212910-7ld36ad","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251030212910-7ld36ad","updated":"20251030213021"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"#[derive(Debug)]\nstruct Foo;\n\nimpl Drop for Foo {\n    fn drop(\u0026mut self) {\n        println!(\"Dropping Foo!\")\n    }\n}\n\nfn main() {\n    let foo = Foo;\n    foo.drop();\n    println!(\"Running!:{:?}\", foo);\n} //不允许，不允许显式地调用drop特征方法 \nDrop::drop 只是借用了目标值的可变引用，所以，就算你提前调用了 drop，后面的代码依然可以使用目标值\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251030213005-z7u4lfd","Type":"NodeParagraph","Properties":{"id":"20251030213005-z7u4lfd","updated":"20251030213028"},"Children":[{"Type":"NodeText","Data":"实现"}]},{"ID":"20251030213028-oqqbcdj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251030213028-oqqbcdj","updated":"20251030213121"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"pub fn drop\u003cT\u003e(_x: T)\n\nfn main() {\n    let foo = Foo;\n    drop(foo);\n    // 以下代码会报错：借用了所有权被转移的值\n    // println!(\"Running!:{:?}\", foo);\n}\ndrop(_x)函数只是个空函数\n由于其持有目标值的所有权，在drop(_x)函数结束之际，编译器会执行_x真正的析构函数\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251030213250-s84vw65","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251030213250-s84vw65","updated":"20251030213315"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/smart-pointer/drop.html#drop-%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF","TextMarkTextContent":"Drop 使用场景"}]},{"ID":"20251030213300-bwfg54y","Type":"NodeList","ListData":{},"Properties":{"id":"20251030213300-bwfg54y","updated":"20251030213300"},"Children":[{"ID":"20251030213300-0eahqmj","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20251030213300-0eahqmj","updated":"20251030213300"},"Children":[{"ID":"20251030213300-fj7xyeo","Type":"NodeParagraph","Properties":{"id":"20251030213300-fj7xyeo","updated":"20251030213300"},"Children":[{"Type":"NodeText","Data":"回收内存资源"}]}]},{"ID":"20251030213300-zma2zks","Type":"NodeListItem","ListData":{"BulletChar":42,"Marker":"Kg=="},"Properties":{"id":"20251030213300-zma2zks","updated":"20251030213300"},"Children":[{"ID":"20251030213300-pev24e5","Type":"NodeParagraph","Properties":{"id":"20251030213300-pev24e5","updated":"20251030213300"},"Children":[{"Type":"NodeText","Data":"执行一些收尾工作"}]}]}]},{"ID":"20251030213250-e4w7vci","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251030213250-e4w7vci","updated":"20251030213314"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"有极少数情况，需要你自己来回收资源的，例如文件描述符、网络 socket 等，当这些值超出作用域不再使用时，就需要进行关闭以释放相关的资源\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251030213741-admodt9","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20251030213741-admodt9","updated":"20251030213757"},"Children":[{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://course.rs/advance/smart-pointer/drop.html#%E4%BA%92%E6%96%A5%E7%9A%84-copy-%E5%92%8C-drop","TextMarkTextContent":"互斥的 Copy 和 Drop"}]},{"ID":"20251030213742-s8svrmo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251030213742-s8svrmo","updated":"20251030213757"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"无法为一个类型同时实现 Copy 和 Drop 特征\n\n// ⚠️ 假设的代码（实际无法编译）\n#[derive(Copy, Clone)]\nstruct FileHandle {\n    fd: i32,  // 文件描述符\n}\n\nimpl Drop for FileHandle {\n    fn drop(\u0026mut self) {\n        println!(\"关闭文件描述符 {}\", self.fd);\n        // 实际会调用 close(self.fd)\n    }\n}\n\nfn main() {\n    let handle1 = FileHandle { fd: 42 };\n    let handle2 = handle1;  // Copy：隐式复制\n    let handle3 = handle1;  // 再次 Copy\n    \n    // 现在有三个 FileHandle，都有相同的 fd: 42\n    // 当它们离开作用域时会发生什么？\n}\n// 💥 问题：\n// - Drop 会被调用 3 次！\n// - 同一个文件描述符被关闭 3 次\n// - 第 2、3 次关闭会失败（double-free 类似的问题）\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}