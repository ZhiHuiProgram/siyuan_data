{"ID":"20251019001156-94pz0na","Spec":"1","Type":"NodeDocument","Properties":{"id":"20251019001156-94pz0na","title":"minigrep小工具","type":"doc","updated":"20251019191754"},"Children":[{"ID":"20251019001156-g6vjl0x","Type":"NodeParagraph","Properties":{"id":"20251019001156-g6vjl0x","style":"font-size: 21px;","updated":"20251019002146"},"Children":[{"Type":"NodeText","Data":"use std::env;     //main执行的时候传入参数"}]},{"ID":"20251019002133-wde18ar","Type":"NodeParagraph","Properties":{"id":"20251019002133-wde18ar","updated":"20251019003837"},"Children":[{"Type":"NodeText","Data":"文件读取："}]},{"ID":"20251019003837-v845hwv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019003837-v845hwv","updated":"20251019003851"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"let contents = fs::read_to_string(file_path)\n        .expect(\"Should have been able to read the file\");  读取所有东西\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019002050-b52jkbg","Type":"NodeParagraph","Properties":{"id":"20251019002050-b52jkbg","updated":"20251019142018"},"Children":[{"Type":"NodeText","Data":"String的所有权转移："}]},{"ID":"20251019142019-w8bxgqu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019142019-w8bxgqu","updated":"20251019175426"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"无序： args.swap_remove(1),   直接移除所有权然后返回，最后一个数据填充移走的位置，较快\n有序： args.swap_remove(1)，  直接移除所有权然后返回，所有元素前移，但是慢\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019150228-nbuf571","Type":"NodeParagraph","Properties":{"id":"20251019150228-nbuf571","updated":"20251019151803"},"Children":[{"Type":"NodeText","Data":"Result提取："}]},{"ID":"20251019151803-9safk0p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019151803-9safk0p","linewrap":"true","updated":"20251019151805"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"unwrap_or_else 是定义在 Result\u003cT,E\u003e 上的常用方法，如果 Result 是 Ok，那该方法就类似 unwrap：返回 Ok 内部的值；如果是 Err，就调用闭包中的自定义代码对错误进行进一步处理\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019151810-545e86t","Type":"NodeParagraph","Properties":{"id":"20251019151810-545e86t","updated":"20251019154457"},"Children":[{"Type":"NodeText","Data":"Result返回："}]},{"ID":"20251019154457-4t5f1y2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019154457-4t5f1y2","updated":"20251019154558"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"fn test() -\u003e Result\u003c(), Box\u003cdyn Error\u003e\u003e  因为错误种类比较多，用特征对象\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019154941-2l9u7xb","Type":"NodeParagraph","Properties":{"id":"20251019154941-2l9u7xb","updated":"20251019162845"},"Children":[{"Type":"NodeText","Data":"if let.is_err() {if let Err(e) = \u0026ret {   解构"}]},{"ID":"20251019162823-ivcllxl","Type":"NodeParagraph","Properties":{"id":"20251019162823-ivcllxl","updated":"20251019162848"},"Children":[{"Type":"NodeText","Data":"}}"}]},{"ID":"20251019162849-x6ytb4x","Type":"NodeParagraph","Properties":{"id":"20251019162849-x6ytb4x","updated":"20251019162859"},"Children":[{"Type":"NodeText","Data":"\u0026str 迭代每行数据"}]},{"ID":"20251019162900-812af7m","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019162900-812af7m","updated":"20251019162904"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"pub fn search\u003c'a\u003e(query: \u0026str, contents: \u0026'a str) -\u003e Vec\u003c\u0026'a str\u003e {\n    for line in contents.lines() {\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019162831-l4t45ao","Type":"NodeParagraph","Properties":{"id":"20251019162831-l4t45ao","updated":"20251019163005"},"Children":[{"Type":"NodeText","Data":"查询\u0026str里面的数据有无："}]},{"ID":"20251019163005-qr5fy44","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019163005-qr5fy44","updated":"20251019163007"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"if line.contains(query)\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019162819-n1b1a41","Type":"NodeParagraph","Properties":{"id":"20251019162819-n1b1a41","updated":"20251019170150"},"Children":[{"Type":"NodeText","Data":"写测试用例："}]},{"ID":"20251019170150-li6fcj1","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019170150-li6fcj1","updated":"20251019170321"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"三种情况，二进制测试main.rs， 库测试lib.rs， 文档测试doc.rs\n#[cfg(test)]  //声明有测试用例了\nmod tests {  //包裹一下\n    use super::*;\n    #[test] //下面的函数参与测试\n    fn one_result() {\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019170320-sq5jdru","Type":"NodeParagraph","Properties":{"id":"20251019170320-sq5jdru","updated":"20251019170804"},"Children":[{"Type":"NodeText","Data":"字符串转换为小写"}]},{"ID":"20251019170805-4hg11yj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019170805-4hg11yj","updated":"20251019170843"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"let query:\u0026str = query.to_lowercase(); //把字符串全都每行转为小写，然后就可以搜索不论大小写的内容了\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019170845-vtmhdpc","Type":"NodeParagraph","Properties":{"id":"20251019170845-vtmhdpc","updated":"20251019172513"},"Children":[{"Type":"NodeText","Data":"外部输入环境变量："}]},{"ID":"20251019172513-oj3a6fe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019172513-oj3a6fe","updated":"20251019172601"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"let env_ignore_case = env::var(\"IGNORE_CASE\").is_ok();  //var返回一个Result值，is_ok判断有无\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019172532-6gzhtr0","Type":"NodeParagraph","Properties":{"id":"20251019172532-6gzhtr0","updated":"20251019182604"},"Children":[{"Type":"NodeText","Data":"重定向输出"}]},{"ID":"20251019182604-rdhmn87","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019182604-rdhmn87","updated":"20251019183141"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"eprintln!(\"Application error: {e}\");  输出到标准错误\nprintln!(\"Application error: {e}\");   输出到标准输出\n\n./target/debug/minigrep frog test.tx 2\u003e log.txt  //这里 2\u003e 是重定向标准错误\n./target/debug/minigrep frog test.tx \u003e log.txt\t //这里 \u003e  是重定向标准输出\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019182706-bohevnt","Type":"NodeParagraph","Properties":{"id":"20251019182706-bohevnt","updated":"20251019191409"},"Children":[{"Type":"NodeText","Data":"这里集合类型有一个方法"}]},{"ID":"20251019191433-ko9px68","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019191433-ko9px68","updated":"20251019191632"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"Option(T) 的ad_deref方法，可以将组合类型转化为引用切片\nlet opt_vec: Option\u003cVec\u003ci32\u003e\u003e = Some(vec![1, 2, 3]);\nlet opt_slice: Option\u003c\u0026[i32]\u003e = opt_vec.as_deref();\n// Some(vec![1, 2, 3]) → Some(\u0026[1, 2, 3])\n\n\nlet opt_string: Option\u003cString\u003e = Some(String::from(\"hello\"));\nlet opt_str: Option\u003c\u0026str\u003e = opt_string.as_deref();\n// Some(String::from(\"hello\")) → Some(\"hello\")\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019191736-q13gsw9","Type":"NodeParagraph","Properties":{"id":"20251019191736-q13gsw9","updated":"20251019191751"},"Children":[{"Type":"NodeText","Data":"迭代器的新用法："}]},{"ID":"20251019191751-z1cbvfe","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20251019191751-z1cbvfe","updated":"20251019191752"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"aWZjb25maWc="},{"Type":"NodeCodeBlockCode","Data":"content.lines().filter(|line| line.contains(query)).collect()  //新写法,\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20251019191754-a5bp5gb","Type":"NodeParagraph","Properties":{"id":"20251019191754-a5bp5gb","updated":"20251019191754"}}]}